angular.module("app",["ngRoute"]),angular.module("app").controller("ApplicationCtrl",["$scope","UserSvc",function(t,o){t.$on("login",function(o,e){t.currentUser=e}),t.remove=function(e){t.currentUser="",o.logout()}}]),angular.module("app").controller("LoginCtrl",["$scope","UserSvc","$location",function(t,o,e){t.login=function(e,n){o.login(e,n).then(function(o){t.$emit("login",o.data)}),document.getElementById("loginform").reset()}}]),angular.module("app").controller("PostsCtrl",["$scope","PostsSvc",function(t,o){t.addPost=function(){t.postBody&&o.create({username:"dickeyxxx",body:t.postBody}).success(function(o){t.postBody=null})},t.$on("ws:new_post",function(o,e){t.$apply(function(){t.posts.unshift(e)})}),o.fetch().success(function(o){t.posts=o})}]),angular.module("app").service("PostsSvc",["$http",function(t){this.fetch=function(){return t.get("/api/posts")},this.create=function(o){return t.post("/api/posts",o)},console.log("Error!")}]),angular.module("app").controller("RegisterCtrl",["$scope","UserSvc",function(t,o){t.register=function(e,n){o.register(e,n).then(function(o){t.$emit("login",o.data)})}}]),angular.module("app").config(["$routeProvider",function(t){t.when("/",{controller:"PostsCtrl",templateUrl:"posts.html"}).when("/register",{controller:"RegisterCtrl",templateUrl:"register.html"}).when("/login",{controller:"LoginCtrl",templateUrl:"login.html"}).when("/logout",{controller:"ApplicationCtrl",templateUrl:"posts.html"})}]),angular.module("app").service("UserSvc",["$http",function(t){var o=this;o.getUser=function(){return t.get("/api/users")},o.login=function(e,n){return t.post("/api/sessions",{username:e,password:n}).then(function(e){return o.token=e.data,t.defaults.headers.common["X-Auth"]=e.data,o.getUser()})},o.register=function(e,n){return t.post("/api/users",{username:e,password:n}).then(function(){return o.login(e,n)})},o.logout=function(){delete t.defaults.headers.common["X-Auth"],o.getUser()}}]),angular.module("app").run(["$rootScope",function(t){var o="ws://localhost:3010",e=new WebSocket(o);e.onopen=function(){console.log("WebSocket connected")},e.onmessage=function(o){var e=JSON.parse(o.data);t.$broadcast("ws:"+e.topic,e.data)}}]);
//# sourceMappingURL=data:application/json;base64,
